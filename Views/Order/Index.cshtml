
@model PagedList.IPagedList<MVCProject_Nazmul.Models.Order>
@using PagedList.Mvc;
@using MVCProject_Nazmul.Helpers;
<script>
    function changePageSize() {
        var selectedValue = document.getElementById("pageSize").value;
        window.location.href = '@Url.Action("Index", "Order")?pageSize=' + selectedValue;
    }
</script>

@{
    ViewBag.Title = "Index";
}

<h2>Order List</h2>
<br />
<div >
    <div class="pull-right" >
        @Html.DropDownList("pageSize", (SelectList)ViewBag.PageSize, new { onchange = "changePageSize()", @class = "form-control" })
    </div>
    <div class="pull-left">
        @Html.ActionLink("Create New", "Index", "Order", new { @class = "btn btn-primary" })
    </div>
</div>


<br/>
<br/>
@using (Html.BeginForm())
{
    @Html.SearchForm()
}

        <br />
        <table class="table">
            <tr>
                <th>
                    @Html.ActionLink("Customer Name", "Index", new { sortOrder = ViewBag.NameSortParam })
                </th>
                <th>
                    Order Date
                </th>
                <th>
                    Note
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Customer.CustomerName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Note)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.OrderId }, new { @class = "btn btn-warning btn-sm" })
                        @Html.ActionLink("Details", "Details", new { id = item.OrderId }, new { @class = "btn btn-info btn-sm" })
                        @Html.ActionLink("Delete", "Delete", new { id = item.OrderId }, new { @class = "btn btn-danger btn-sm" })
                    </td>
                </tr>
            }

        </table>

        @*<br />
            Page @(Model.PageCount<Model.PageNumber ? 0: Model.PageNumber) of @Model.PageCount
            @Html.PagedListPager(Model, page => Url.Action("Index",
            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))*@


        @Html.CustomPager(Model)
